<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="FlowLayoutPanel1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BTN_USER.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>